[
{
	"uri": "//localhost:1313/vi/",
	"title": "Giới thiệu AWS Lambda",
	"tags": [],
	"description": "",
	"content": "Giới thiệu AWS Lambda Tổng quan Trong bài lab này, bạn sẽ tìm hiểu về dịch vụ AWS Lambda, một trong những dịch vụ quan trọng nhất trong hệ sinh thái AWS giúp bạn chạy mã mà không cần quản lý máy chủ. Bạn sẽ nắm được khái niệm Lambda là gì, khi nào nên sử dụng và cách Lambda được kích hoạt (trigger). Ngoài ra, phần này cũng cung cấp tổng quan về cách AWS Lambda tính phí – điều rất quan trọng khi bạn triển khai thực tế.\nAWS Lambda là gì? AWS Lambda là một dịch vụ serverless computing do Amazon Web Services cung cấp. Bạn chỉ cần viết code, chọn ngôn ngữ (Python, Node.js, Java, v.v.), triển khai và AWS sẽ tự động:\nCấp phát tài nguyên (compute) Quản lý hệ điều hành, bảo mật Scale tự động Theo dõi và log hoạt động Lambda phù hợp cho các tác vụ nhỏ, đơn lẻ, không cần máy chủ chạy 24/7.\nLambda là một dịch vụ dạng event-driven, nghĩa là chỉ khi có sự kiện xảy ra (trigger), mã của bạn mới chạy.\nKhi nào nên dùng Lambda? Bạn nên cân nhắc sử dụng AWS Lambda trong các tình huống:\nTình huống Lý do phù hợp Xử lý ảnh sau khi upload lên S3 Trigger từ S3, xử lý ảnh rồi lưu lại Gửi email tự động khi có sự kiện Kết hợp với SNS, SES, hoặc EventBridge Backend nhỏ cho REST API Tích hợp với API Gateway Định kỳ kiểm tra/tự động hóa Tạo cron job bằng EventBridge Nhận và xử lý tin nhắn Từ SQS, SNS, DynamoDB Streams hoặc Kinesis Cơ chế Trigger của Lambda Một Lambda function sẽ chỉ thực thi khi có trigger xảy ra từ các dịch vụ khác hoặc bạn gọi trực tiếp nó.\n🔄 Một số nguồn trigger phổ biến: Amazon S3: khi có object được upload/xóa API Gateway: khi người dùng gọi REST API DynamoDB Streams: khi có dữ liệu được ghi vào bảng CloudWatch Events / EventBridge: kích hoạt định kỳ SNS / SQS: khi có tin nhắn mới Trigger giúp bạn xây dựng hệ thống phản ứng tự động mà không cần polling hay cron server phức tạp.\nCách tính chi phí (Pricing) Lambda tính chi phí theo 2 yếu tố chính:\nSố lần gọi function Thời gian chạy và bộ nhớ cấp phát 🎯 Công thức tính: Giá = (thời gian chạy tính theo mili giây) × (bộ nhớ) × (số lượt gọi) "
},
{
	"uri": "//localhost:1313/vi/1-intro-to-container-security/",
	"title": "Giới thiệu về Bảo mật Container",
	"tags": [],
	"description": "",
	"content": "🎯 Mục tiêu của chương này Trong chương đầu tiên này, bạn sẽ được làm quen với các khái niệm quan trọng nhất về bảo mật container, từ tổng quan lý thuyết đến kỹ năng thực hành phân tích mối đe doạ. Đây là phần nền tảng cho toàn bộ workshop.\n📚 Nội dung chính 1.1 Tổng quan về Bảo mật Container\nGiới thiệu container là gì, các lớp bảo mật trong vòng đời container, và tổng quan về các công cụ sẽ sử dụng trong workshop như Falco, OPA, NetworkPolicy, Trivy\u0026hellip;\n1.2 Mô hình Mối đe doạ (Threat Modeling)\nTìm hiểu mô hình STRIDE, xác định các điểm tấn công trong hệ thống container, và thực hành vẽ sơ đồ threat model cho một ứng dụng container mẫu.\n✅ Kết quả sau chương này Hiểu rõ lý do tại sao container cần được bảo mật chặt chẽ Nắm được mô hình bảo mật tổng thể cho container: từ build đến runtime Biết cách xác định mối đe doạ tiềm ẩn qua mô hình STRIDE Sẵn sàng để bước vào thực hành triển khai bảo mật trên môi trường AWS 🚀 Bây giờ hãy bắt đầu với phần 1.1 nhé!\n"
},
{
	"uri": "//localhost:1313/vi/2-setup-aws-eks/1-create-eks-cluster/",
	"title": "Tạo Cluster EKS trên AWS",
	"tags": [],
	"description": "",
	"content": "Nội dung chính:\nBước 1: Cài đặt công cụ trên Windows Bước 2: Tạo file cấu hình cluster Bước 3: Tạo cluster bằng lệnh Bước 4: Kiểm tra kết nối với kubectl Ghi chú và lưu ý Bước 1: Cài đặt công cụ trên Windows AWS CLI Truy cập: https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-windows.html → Tải file .msi, cài đặt như phần mềm bình thường. Sau đó mở CMD và kiểm tra:\naws –version Nếu hiện version là cài thành công.\n⚙️ Cấu hình tài khoản AWS:\nTạo IAM USER Tạo Access keys/ Secret Access Key Mở powershell aws configure Sau đó nhập các thông tin: AWS Access Key ID AWS Secret Access Key Region: ap-southeast-1 Output format: json Cài đặt kubectl Truy cập link chính thức: 👉 https://kubernetes.io/docs/tasks/tools/install-kubectl-windows/ Hoặc dùng choco nếu đã có Chocolatey:\nchoco install kubernetes-cli Kiểm tra lại bằng:\nkubectl version –client Cài đặt eksctl Truy cập: 👉 https://eksctl.io/introduction/#installation Tải file .exe → Đổi tên thành eksctl.exe và: Copy vào thư mục như C:\\Program Files\\eksctl Thêm thư mục đó vào Environment Variables \u0026gt; PATH Hoặc dùng choco nếu đã có Chocolatey:\nchoco install eksctl Kiểm tra lại bằng: eksctl version Bước 2: Tạo file cấu hình cluster Mở Notepad hoặc VS Code, tạo file eks-cluster.yaml với nội dung:\napiVersion: eksctl.io/v1alpha5 kind: ClusterConfig metadata: name: secure-eks region: ap-southeast-1 nodeGroups: - name: ng-1 instanceType: t3.medium desiredCapacity: 2 ssh: allow: true Lưu lại cùng thư mục nơi bạn mở terminal sau này.\nBước 3: Tạo cluster bằng lệnh Mở PowerShell hoặc terminal trong VS Code, chuyển đến thư mục chứa file eks-cluster.yaml, sau đó chạy:\neksctl create cluster -f eks-cluster.yaml ⏳ Quá trình tạo có thể mất 10–15 phút. eksctl sẽ tạo: VPC, IAM role, Security Group, Control Plane, EC2 Node…\nBước 4: Kiểm tra kết nối với kubectl Sau khi cluster tạo xong, xác minh kết nối:\nkubectl get nodes ✅ Bạn sẽ thấy 2 node worker đang chạy – EKS đã hoạt động sẵn sàng!\n📸 Chụp ảnh terminal kết quả để sử dụng trong báo cáo workshop.\nGhi chú eksctl sẽ tự tạo VPC và node group nếu chưa có Nên dùng region ap-southeast-1 (Singapore) nếu bạn ở Việt Nam để giảm độ trễ "
},
{
	"uri": "//localhost:1313/vi/1-intro-to-container-security/1-overview/",
	"title": "Tổng quan về Bảo mật Container",
	"tags": [],
	"description": "",
	"content": "Nội dung chính:\nContainer là gì và vì sao cần bảo mật? Các lớp bảo mật container Mục tiêu cuối cùng của workshop Container là gì và vì sao cần bảo mật? Container là một phương pháp đóng gói ứng dụng kèm theo các thư viện và cấu hình để chạy được ở bất kỳ đâu. Tuy nhiên, do tính chất nhẹ và chia sẻ kernel nên container tiềm ẩn nhiều rủi ro bảo mật:\nContainer có thể truy cập file hệ thống host nếu không được giới hạn đúng cách Tấn công “container escape” có thể ảnh hưởng toàn bộ node Lỗi cấu hình (exposed port, privilege mode) dễ bị khai thác Các image từ nguồn không xác thực có thể chứa mã độc Các lớp bảo mật container Bảo mật container không chỉ ở runtime mà cần bảo vệ toàn bộ vòng đời ứng dụng:\nGiai đoạn Biện pháp Build Quét image (Trivy), loại bỏ lỗ hổng Deploy Kiểm soát chính sách (OPA, limit) Runtime Phát hiện bất thường (Falco) Network Giới hạn truy cập (NetworkPolicy) Monitoring Cảnh báo \u0026amp; phản hồi sự cố Mục tiêu cuối cùng của workshop Cuối workshop, bạn sẽ:\nCài đặt cluster EKS với ứng dụng container hoá Thực hiện quét lỗ hổng, kiểm tra benchmark (CIS) Áp dụng NetworkPolicy, OPA, Falco để bảo vệ container Triển khai hệ thống alerting và tự động hóa khắc phục Hiểu và áp dụng mô hình mối đe doạ (STRIDE, ATT\u0026amp;CK) 🧠 Bạn sẽ chụp ảnh lại từng bước và đưa vào nội dung workshop để hướng dẫn người khác triển khai môi trường bảo mật container toàn diện.\n"
},
{
	"uri": "//localhost:1313/vi/1-intro-to-container-security/2-threat-modeling/",
	"title": "Mô hình mối đe doạ (Threat Modeling)",
	"tags": [],
	"description": "",
	"content": "Nội dung chính:\nMô hình STRIDE là gì? Xác định bề mặt tấn công container Vẽ sơ đồ mô hình đe doạ Thực hành mô hình hoá mối đe doạ với container app Mô hình STRIDE là gì? STRIDE là một mô hình giúp xác định các loại mối đe doạ trong hệ thống. Nó gồm:\nThành phần Mối đe doạ S Spoofing – Giả mạo danh tính T Tampering – Can thiệp dữ liệu R Repudiation – Chối bỏ hành vi I Information Disclosure – Rò rỉ TT D Denial of Service – Từ chối dịch vụ E Elevation of Privilege – Leo thang đặc quyền 🧠 STRIDE giúp phân tích từng thành phần trong hệ thống để xác định lỗ hổng tiềm ẩn.\nXác định bề mặt tấn công container Khi triển khai ứng dụng container, cần xác định các điểm có thể bị khai thác:\nContainer Image: chứa lỗ hổng (CVE), mã độc Registry: không được bảo vệ → dễ bị đẩy/pull trái phép Kubernetes API: bị tấn công qua RBAC sai Pod chạy với root: tăng rủi ro leo thang Thông tin nhạy cảm: hardcoded secret, ENV var Vẽ sơ đồ mô hình đe doạ Bạn có thể dùng các công cụ sau để minh hoạ:\n✏️ Draw.io 🔐 Microsoft Threat Modeling Tool 👉 Sơ đồ nên gồm:\nNgười dùng (developer, attacker) Các thành phần: registry, CI/CD, cluster, pod, secrets, DB Ghi chú lỗ hổng tương ứng với STRIDE 📸 Chụp ảnh sơ đồ threat modeling để minh hoạ cho tài liệu sau.\nThực hành mô hình hoá mối đe doạ với container app Chọn một ứng dụng container hoá bạn sẽ triển khai ở lab sau (VD: nginx + flask + mongo) Phân tích từng bước từ build → deploy → chạy → kết nối mạng Liệt kê mối đe doạ với STRIDE và đặt biện pháp phòng chống Bước Mối đe doạ (STRIDE) Phòng chống Push image Tampering Ký image, dùng registry riêng Chạy pod Elevation Privilege Không chạy với root, drop capabilities Kết nối DB Information Disclosure NetworkPolicy, không expose DB 📘 Kết quả mong đợi:\nHiểu rõ các dạng đe doạ bảo mật container Tự tay mô hình hoá mối đe doạ cho ứng dụng bạn sắp triển khai Có sơ đồ threat modeling sẵn sàng dùng trong workshop "
},
{
	"uri": "//localhost:1313/vi/2-setup-aws-eks/2-deploy-demo-workloads/",
	"title": "Triển khai workload mẫu trên EKS",
	"tags": [],
	"description": "",
	"content": "Nội dung chính:\nTạo namespace riêng cho demo Triển khai ứng dụng nginx và backend Kiểm tra kết nối và chuẩn bị cho các lab tiếp theo Tạo namespace riêng cho demo kubectl create namespace demo Triển khai ứng dụng nginx và backend Tạo file demo-app.yaml với nội dung:\napiVersion: v1 kind: Pod metadata: name: nginx namespace: demo spec: containers: - name: nginx image: nginx ports: - containerPort: 80 --- apiVersion: v1 kind: Pod metadata: name: backend namespace: demo spec: containers: - name: backend image: hashicorp/http-echo args: - \u0026#34;-text=Hello from backend\u0026#34; ports: - containerPort: 5678 Kiểm tra kết nối và chuẩn bị cho các lab tiếp theo kubectl get pods -n demo ✅ Bạn sẽ thấy 2 pod: nginx, backend đang ở trạng thái Running\n📸 Chụp ảnh output terminal để chèn vào phần tài liệu workshop.\nGhi chú: Ứng dụng mẫu này sẽ được dùng trong các lab sau (NetworkPolicy, Falco, OPA\u0026hellip;)\nBạn có thể expose nginx bằng LoadBalancer để truy cập từ bên ngoài (tuỳ chọn):\nkubectl expose pod nginx --port=80 --type=LoadBalancer -n demo "
},
{
	"uri": "//localhost:1313/vi/2-setup-aws-eks/",
	"title": "Khởi tạo Cluster EKS trên AWS",
	"tags": [],
	"description": "",
	"content": "Tổng quan Trong chương này, bạn sẽ học cách tạo môi trường Kubernetes thực tế trên AWS bằng Amazon EKS. Đây là bước bắt buộc để triển khai các biện pháp bảo mật container trong các phần sau.\n🎯 Mục tiêu của chương này Trong chương này, bạn sẽ học cách tạo môi trường Kubernetes thực tế trên AWS bằng Amazon EKS. Đây là bước bắt buộc để triển khai các biện pháp bảo mật container trong các phần sau.\n📚 Nội dung chính 2.1 Tạo EKS Cluster\nHướng dẫn từng bước tạo một cluster EKS bằng eksctl, bao gồm IAM role, VPC, node group.\n2.2 Triển khai workload mẫu\nDeploy một ứng dụng mẫu (nginx + backend) lên EKS để làm môi trường test cho các lab tiếp theo.\n✅ Kết quả sau chương này Tạo được 1 cluster Kubernetes thực tế chạy trên AWS Cấu hình đầy đủ quyền IAM và kết nối với kubectl Deploy thành công ứng dụng mẫu để dùng cho các lab bảo mật sau 🚀 Hãy bắt đầu với phần 2.1 – Tạo EKS Cluster nhé!\n"
},
{
	"uri": "//localhost:1313/vi/3-container-security-hardening/",
	"title": "Tạo Admin Group và Admin User",
	"tags": [],
	"description": "",
	"content": "Tạo Admin Group Đăng nhập vào Bảng điều khiển ở trang AWS Web Service page\nNhấn vào tên tài khoản ở góc trên bên phải và chọn My Security Credentials\nLưu ý: Trong trường hợp không thấy menu My Security Credentials, bạn có thể click vào biểu tượng tìm kiếm và điền IAM. Sau đó click vào dịch vụ IAM để truy cập vào giao diện quản lý dịch vụ IAM.\nỞ thanh bên trái, chọn User Groups sau đó chọn Create Group\nDưới mục Name the group, nhập tên Group (Ví dụ: AdminGroup) và cuộn chuột xuống dưới\nỞ phần Attach permissions policies, gõ AdministratorAccesss vào thanh tìm kiếm và nhấn chọn nó. Cuối cùng, chọn Create Group.\nHoàn thành tạo admin group.\nTạo Admin User Ở thanh bên trái, chọn Users sau đó chọn Add User\nNhập tên User (Ví dụ: AdminUser).\nClick AWS Management Console access. Click Programmatic Access. Click Custom password rồi gõ một password tùy ý của bạn (lưu ý: bạn phải ghi nhớ mật khẩu này cho những lần đăng nhập trong tương lai). Bỏ chọn mục User must create a new password\u0026hellip;. Click Next:Permissions. Lưu ý: Bằng cách chọn AWS Management Console access, bạn vừa cho phép IAM User được truy cập vào AWS thông qua bảng điều khiển AWS trên web. Việc bỏ mục User must create a new password\u0026hellip; cho phép người dùng khi lần đầu đăng nhập vào IAM User đó không cần phải tạo mật khẩu mới.\nClick tab Add user to group và click AdminGroup mà chúng ta tạo trước đó.\nClick Next:Tags\nTags (thẻ) là một tùy chọn không bắt buộc để tổ chức, theo dõi, hoặc điều khiển truy cập của user, thế nên bạn có thể thêm tags hoặc không. Click Next:Review.\nKiểm tra thông tin và chọn Create user\nHoàn thành tạo user. Có thể download.csv để lưu trữ Access key.\nTạo admin user thành công.\nKiểm tra thông tin chi tiết user.\nLưu ý: Sau khi tạo user, bạn sẽ thấy hiện lên hộp thoại download thông tin access key và secret key. Đây là thông tin dùng để thực hiện Programmatic access tới các tài nguyên của AWS thông qua AWS CLI và AWS SDK. Tạm thời chúng ta sẽ chưa sử dụng tới.\nĐăng nhập vào AdminUser Trở về dịch vụ IAM, và chọn Users ở thanh bên trái.\nNhấn vào tên của IAM User mà bạn vừa chọn.\nTrong mục Summary, chọn tab Security credentials. Nhìn vào dòng Summary: Console sign-in link và copy đường link bên cạnh nó. Đây là đường link bạn dùng để đăng nhập vào IAM User.\nMở một tab ẩn danh của trình duyệt bạn đang sử dụng và paste đường link ấy vào thanh tìm kiếm.\nLưu ý: Việc đăng nhập bằng tab ẩn danh cho phép bạn đăng nhập vào AWS bằng IAM User mà không cần phải log out khỏi root user trong tab chính.\nNhập đúng tên IAM User và password mà bạn đã nhập ở phần tạo IAM User ở trên. Nhấn sign in.\nChúc mừng, bạn đã truy cập thành công vào tài khoản của bạn dưới danh nghĩa của một IAM User AdminUser.\nBước tiếp theo, chúng ta sẽ chuyển sang sử dụng IAM Role để nâng cao tính bảo mật hơn cho account của bạn nhé.\nTham khảo IAM User và Đăng Nhập Trong AWS Một IAM user là một định danh được tạo trong một tài khoản AWS, có quyền được tương tác với các tài nguyên AWS. Người dùng IAM đăng nhập bằng cách sử dụng ID tài khoản hoặc tên bí danh, tên người dùng của họ và mật khẩu. Tên người dùng IAM được cấu hình bởi quản trị viên của bạn. Tên người dùng IAM có thể là tên thân thiện như \u0026ldquo;Zhang\u0026rdquo;, hoặc là địa chỉ email như \u0026ldquo;zhang@example.com\u0026rdquo;. Tên người dùng IAM không thể chứa khoảng trắng, nhưng có thể chứa chữ cái in hoa và thường, số, và các ký tự + = , . @ _ -.\nMẹo Nếu người dùng IAM của bạn đã bật xác thực đa yếu tố (MFA), bạn phải có quyền truy cập vào thiết bị xác thực. Để biết thêm chi tiết, xem Sử dụng thiết bị MFA với trang đăng nhập IAM của bạn.\nĐể đăng nhập với tư cách người dùng IAM\nMở Bảng điều khiển Quản lý AWS tại https://console.aws.amazon.com/.\nTrang đăng nhập chính hiển thị. Chọn \u0026ldquo;IAM user\u0026rdquo;, nhập ID tài khoản (12 chữ số) hoặc bí danh và chọn \u0026ldquo;Next\u0026rdquo;.\nGhi chú Bạn có thể không cần phải nhập ID tài khoản hoặc bí danh nếu bạn đã đăng nhập trước đó với tài khoản IAM bằng trình duyệt hiện tại hoặc nếu bạn đang sử dụng URL đăng nhập tài khoản của bạn.\nNhập tên người dùng IAM và mật khẩu của bạn, sau đó chọn \u0026ldquo;Sign in\u0026rdquo;.\nNếu MFA được bật cho người dùng IAM của bạn, sau đó bạn sẽ được xác thực sử dụng nó.\nSau khi xác thực, Bảng điều khiển Quản lý AWS sẽ mở trang chủ Bảng điều khiển.\nTạo khóa truy cập (access key) cho tài khoản root user trên AWS Quyền tối thiểu cần thiết Để thực hiện các bước sau, bạn cần có ít nhất các quyền IAM (Identity and Access Management) sau đây:\nBạn phải đăng nhập với tư cách là tài khoản root user của AWS, điều này không yêu cầu bất kỳ quyền IAM bổ sung nào khác. Bạn không thể thực hiện các bước này với tư cách là người dùng IAM hoặc vai trò (role).\nSử dụng địa chỉ email và mật khẩu của tài khoản AWS để đăng nhập vào Bảng điều khiển quản lý AWS (AWS Management Console) với tư cách là tài khoản root user.\nỞ góc trên bên phải của bảng điều khiển, chọn tên hoặc số tài khoản của bạn, sau đó chọn Security Credentials (Thông tin xác thực bảo mật).\nỞ phần Access keys (Khóa truy cập), chọn Create access key (Tạo khóa truy cập). Nếu tùy chọn này không khả dụng, điều đó có nghĩa bạn đã có số lượng tối đa các khóa truy cập. Bạn phải xóa một trong các khóa truy cập hiện có trước khi tạo khóa mới. Để biết thêm thông tin, xem IAM Object Quotas trong Hướng dẫn Người dùng IAM.\nTrên trang Alternatives to root user access keys (Các phương án thay thế cho khóa truy cập tài khoản root user), xem xét các khuyến nghị về bảo mật. Để tiếp tục, chọn vào ô kiểm và sau đó chọn Create access key (Tạo khóa truy cập).\nTrên trang Retrieve access key (Trang Lấy lại khóa truy cập), Access key ID của bạn sẽ được hiển thị.\nDưới mục Secret access key (Khóa truy cập bí mật), chọn Show (Hiển thị) và sau đó sao chép Access key ID và Secret key từ cửa sổ trình duyệt của bạn, sau đó dán chúng vào một nơi an toàn. Tùy chọn khác, bạn có thể chọn Download .csv file (Tải xuống tệp .csv) để tải xuống một tệp có tên là rootkey.csv chứa Access key ID và Secret key. Lưu tệp ở một nơi an toàn.\nChọn Done (Hoàn thành). Khi bạn không còn cần khóa truy cập nữa, chúng tôi khuyến nghị bạn xóa nó hoặc ít nhất là xem xét vô hiệu hóa nó để không ai có thể lạm dụng.\nLưu ý: Các bước này chỉ áp dụng cho tài khoản root user trên AWS. Đối với các người dùng IAM hoặc vai trò (role), cách tạo và quản lý khóa truy cập có thể khác nhau.\nXóa một khóa truy cập cho người dùng gốc trên AWS Quyền tối thiểu Để thực hiện các bước sau, bạn phải có ít nhất các quyền IAM (Quản lý Quyền và Danh sách quyền) sau đây:\nBạn phải đăng nhập dưới tư cách người dùng gốc của tài khoản AWS, điều này không yêu cầu bất kỳ quyền AWS Identity and Access Management (IAM) bổ sung nào. Bạn không thể thực hiện các bước này dưới tư cách người dùng IAM hoặc vai trò. Sử dụng địa chỉ email và mật khẩu của tài khoản AWS để đăng nhập vào Bảng điều khiển Quản lý AWS dưới tư cách người dùng gốc của bạn. Ở góc trên bên phải của bảng điều khiển, chọn tên hoặc số tài khoản của bạn, sau đó chọn Security Credentials (Chứng chỉ Bảo mật). Trong phần Access keys (Khóa truy cập), chọn khóa truy cập mà bạn muốn xóa, sau đó, ở mục Actions (Thao tác), chọn Delete (Xóa). Lưu ý Theo cách khác, bạn có thể Deactivate (Ngưng hoạt động) một khóa truy cập thay vì xóa nó vĩnh viễn. Điều này giúp bạn có thể tiếp tục sử dụng nó trong tương lai mà không cần thay đổi cả ID khóa lẫn khóa bí mật. Trong khi khóa bị vô hiệu hóa, mọi yêu cầu sử dụng nó trong các yêu cầu tới AWS API sẽ thất bại với lỗi \u0026ldquo;access denied\u0026rdquo; (truy cập bị từ chối).\nTrên hộp thoại Delete (Xóa \u0026lt;ID khóa truy cập\u0026gt;), chọn Deactivate (Ngưng hoạt động), nhập ID khóa truy cập để xác nhận bạn muốn xóa nó, sau đó chọn Delete (Xóa).\n"
},
{
	"uri": "//localhost:1313/vi/4-policy-enforcement-and-runtime-protection/",
	"title": "Hỗ trợ Xác thực Tài khoản",
	"tags": [],
	"description": "",
	"content": "Nội dung:\nKiểm tra các thông tin Tạo case hỗ trợ với AWS Support Trong quá trình khởi tạo tài khoản AWS, ở bước xác thực thông tin số điện thoại liên lạc, đôi khi sẽ xảy ra tình trạng không nhận được tin nhắn SMS hoặc cuộc gọi từ phía AWS. Trong trường hợp đó, hãy làm theo các bước sau để hoàn thành việc xác nhận thông tin tài khoản:\nKiểm tra các thông tin Đầu tiên, hãy kiểm tra lại các thông tin tài khoản của bạn và đảm bảo chúng đã được nhập chính xác:\nBạn đã nhập thông tin số điện thoại và chọn mã vùng quốc tế chính xác để nhận cuộc gọi. Nếu bạn sử dụng điện thoại di động, kiểm tra điện thoại của bạn để chắc chắn bạn vẫn đang trong vòng phủ sóng để nhận cuộc gọi. Thông tin về phương thức thanh toán đã được nhập chính xác. Hãy chắc chắn rằng số điện thoại mà bạn cung cấp trong tài khoản AWS của bạn có thể liên lạc được.\nTạo case hỗ trợ với AWS Support Sau khi kiểm tra thông tin chính xác nhưng vẫn chưa nhận được cuộc gọi xác thực, AWS Support sẽ hỗ trợ bạn kích hoạt tài khoản một cách thủ công.\nTruy cập vào AWS Support console, chọn Create case. Chọn Account and billing support và nhập các thông tin hỗ trợ: Type: chọn Account. Category: chọn Activation. Subject: viết ngắn gọn tình trạng gặp phải của bạn (VD: Did not receive an SMS message or call for verification) Description: Cung cấp chi tiết tình trạng gặp phải và thông tin về thời gian bạn cần hỗ trợ kích hoạt tài khoản. Attachments: Đính kèm hình ảnh mô tả bước xác thực đang vướng phải. Ở mục Contact options, chọn Chat ở Contact methods. Chọn Submit. 5. Đội ngũ AWS Support sẽ liên lạc và hỗ trợ kích hoạt tài khoản của bạn.\nBạn có thể tạo yêu cầu hỗ trợ với AWS Support ngay cả khi tài khoản của bạn chưa được kích hoạt.\n"
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]